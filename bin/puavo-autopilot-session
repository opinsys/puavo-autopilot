#!/usr/bin/ruby1.9.1

# XXX document what this is and what it does

ENV['PATH'] = "#{ File.dirname($0) }:#{ ENV['PATH'] }"

def firefox(page)
  system('firefox', '-new-window', page)
end

def move_mouse
  system('xte', 'mousermove 100 100')
end

commands = [
  [ 3,  %q{ firefox('http://areena.yle.fi/')                      }, ],
  [ 3,  %q{ firefox('http://www.amazon.com/')                     }, ],
  [ 3,  %q{ firefox('http://www.apple.com/')                      }, ],
  [ 3,  %q{ firefox('http://www.bing.com/')                       }, ],
  [ 6,  %q{ firefox('http://www.facebook.com/')                   }, ],
  [ 3,  %q{ firefox('http://www.google.com/')                     }, ],
  [ 3,  %q{ firefox('http://www.ubuntu.com/')                     }, ],
  [ 3,  %q{ firefox('http://www.youtube.com/')                    }, ],
  [ 1,  %q{ firefox('http://www.youtube.com/watch?v=mahBZ4lSZHQ') }, ],
  [ 7,  %q{ system('gnome-session-quit', '--force',
		                         '--no-prompt',
	                                 '--logout')              }, ], 
  [ 3,  %q{ system('libreoffice', '--base'   )                    }, ],
  [ 2,  %q{ system('libreoffice', '--calc'   )                    }, ],
  [ 2,  %q{ system('libreoffice', '--draw'   )                    }, ],
  [ 2,  %q{ system('libreoffice', '--impress')                    }, ],
  [ 3,  %q{ system('pkill', '-x', '-U', ENV['USER'], 'firefox')   }, ],
]

commands_with_cumulative_probability = []
sum = 0
commands.each do |cmdinfo|
  commands_with_cumulative_probability << [ sum, cmdinfo[1] ]
  sum += cmdinfo[0]
end

def get_random_command_string(sum, commands_with_cumulative_probability)
  random_number = rand() * sum
  commands_with_cumulative_probability.reverse.each do |cmdinfo|
    if random_number >= cmdinfo[0]
      return cmdinfo[1]
    end
  end

  raise 'Internal error on get_random_command'
end

while true do
  cmd_string = get_random_command_string(sum,
					 commands_with_cumulative_probability)
  STDERR.puts "puavo-autopilot-session is going to run #{ cmd_string.strip }"
  fork { eval(cmd_string) }

  sleep(3 + rand() * 27)
end
